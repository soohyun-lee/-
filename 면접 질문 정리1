## 객체지향프로그래밍 
#### (OOP - Object Oriented Programming)
- 인간 중심적 프로그래밍
- 현실 세계의 사물들을 객체라고 본다면, 그 객체로부터 개발하고자 하는 애플리케이션에 필요한 특징들을 뽑아와 프로그래밍 하는 것
- 객체지향적으로 코드를 작성하면 코드 재사용이 높다. 라이브러리로 저장해놓고 계속 사용할수도 있다.

### 1-1. 객체 지향적 설계 원칙
1. Single Resposibility Principle : 단일 책임 원칙 ---- SRP
클래스는 단 하나의 책임을 가져야 하며, 클래스를 변경하는 이유는 단 하나의 이유여야한다.

2. Open Cloed Principle : 개방-폐쇄 원칙 -- OCP
확장에는 열려 있어야 하고, 변경에는 닫혀 있어야 한다.

3. Liskov Substitution Principle : 리스코프 치환 원칙 -- LSP
상위 타입의 객체를 하위 타입의 객체로 치환해도 상위 타입을 사용하는 프로그램은 정상적으로 동장해야 한다.

4. Interface Segregation Principle : 인터페이스 분리 원칙 -- ISP
인터페이스는 그 인터페이스를 사용하는 클라이언트를 기준으로 분리해야 한다.

5. Dependency Inversion Principle : 의존 역전 원칙 -- DIP
고수준 모듈은 저 수준 모듈의 구현에 의존해서는 안된다.
