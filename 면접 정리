## 모의 면접 대답 못한 부분 정리
1. 프로세스 vs 스레드
 프로세스 
 정의 : 메모리에 올라와 실행되고 있는 프로그램의 인스턴스(독립적인 개체)
 특징
  1) code, data, stack, heap의 구조로 되어 있는 독립된 메모리 영역을 할당 받음
  2) 기본적으로 프로세스당 최소 1개의 스레드를 가지고 있음
  3) 각 프로세스는 별도의 주소 공간에서 실행된다.
  4) 다른 프로세스의 변수나 자료구조에 접근 할 수 없으며 접근하려면 통신을 사용해야한다(파이프, 파일, 소켓 등)
  
 스레드
 정의 : 프로세스의 특정한 수행 경로
 특징
  1) 프로세스 내에서 각각 stack만 따로 할당 받고, code, data, heap영역은 공유
  2) 한 프로세스 내에서 동작되는 여러 실행 흐름으로, 같은 프로세스 내에서는 스레드끼리 공유하면서 실행된다.
  
 * 멀티 프로세스 대신 멀티 스레드를 사용하는 이유
   : 즉, 프로그램을 여러개 키는 것 보다 하나의 프로그램 안에서 여러 작업을 하는 것이 나음
   이유
      1. 자원의 효율성 증대
      2. 처리 비용 감속 및 응답 시간 단축


2. 데이버베이스에서 FK 를 쓰는 이유
 무결성의 원칙 때문에
 프로그램으로 정해지지 않은 값들을 찾아 지우거나 쓰지 않는 다면 불필요한 데이터가 쌓이는데 이 또한 유지비용이 계속 들어간다. 
 그래서 필요한 값만 들어가게 하기 위해 fk키를 쓰면 무결성이 보장된다.
 
 3. bcrypt 
 속도는 SHA2,3에 비해 느리지만 그만큼 공격자가 rainbow table을 쉽게 만들 수 있음
 (rainbow table : 미리 해쉬값들을 전부 계산해놓은 테이블)
 
 4. ORM이 뭔가요?
 객체와 관계형 데이터베이스를 자동으로 매핑해주는 것
 장점 : 객체 지향적 코드로 인해 더 직관적이다.(가독성)
     : 긴 쿼리문을 작성하지 않아도 된다.
     : 재사용 및 유지보수가 편리하다.
     : DBMS에 종속적이지 않다.
 단점
     : 모든 기능을 ORM만으로 구현하기는 어렵다
     : 잘못된 구현은 성능 저하로 이어진다.

5. 세션기반 인증이랑 토큰기반 인증 차이
 세션 기반 인증 : 세션과 쿠키가 사용 됨(서버 메모리에 세션 정보가 저장)
   특징 : 서버측에서 관리하기때문에 클라이언트 변조에 영향받거나 데이터의 손상 우려가 없다.
       : 유저들의 세션에 대한 정보를 서버 메모리에 들고 있어야하는 부담이 있다.

 토큰 기반 인증 : 유저의 정보를 서버에 저장하지 않는다.
   특징 : 서버에 세션을 이용해서 정보를 기록하는 대신 토큰을 발급해준다.
       : 토큰에 대한 verification만 수행하고 저장은 클라이언트에서 수행
       : 상대적으로 stale(손상)의 위험이 크다

6. TCP vs UDP 
    TCP 
    : 연결형 서비스를 지원하는 전송계층 프로토콜
    : 신뢰성 있는 데이터 전달과 흐름제어 및 혼잡제어를 제공 > 신뢰성있는 전송이 중요할 때 사용(web통신, 파일전송)
    
    UDP
    : 비연결형 서비스를 지원하는 전송계층 프로토콜
    : 전송 순서를 보장하지 않음
    : 신뢰성은 낮지만 속도는 빠름 > 연속성이 중요한 서비스에서 사용 (스트리밍, 음성, 멀티미디어)
    
